input {
  udp {
    port => 5000
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
    }
    if "_grokparsefailure" not in [tags] {
      mutate { remove_field => [ "message" ] }
    }
    grok {
      match => { "syslog_message" => "\[%{DATA}\] \[UFW %{WORD:ufw_action}\] IN=%{DATA:ufw_interface} OUT= MAC=%{DATA:ufw_mac} SRC=%{IP:ufw_src_ip} DST=%{IP:ufw_dest_ip} %{GREEDYDATA:ufw_tcp_opts} PROTO=%{WORD:ufw_protocol} SPT=%{INT:ufw_src_port} DPT=%{INT:ufw_dst_port} %{GREEDYDATA:ufw_tcp_opts}" }
    }
    if "_grokparsefailure" not in [tags] {
      geoip { source => "ufw_src_ip" }
    }
  }
}

output {
  if [type] == "syslog" and "_grokparsefailure" in [tags] {
    elasticsearch { hosts => ["elasticsearch"]
      index => "syslog-%{+YYYY.MM.dd}"
      ilm_enabled => "false"
    }
  }
  else if [type] =="syslog" {
    elasticsearch { hosts => ["elasticsearch"]
      index => "logstash-%{+YYYY.MM.dd}"
      ilm_enabled => "false"
    }
  }
  else {
    elasticsearch { hosts => ["elasticsearch"]
      index => "logstash-%{+YYYY.MM.dd}"
      ilm_enabled => "false"
    }
  }
}