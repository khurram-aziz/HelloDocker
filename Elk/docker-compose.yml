version: '3.5'

networks:
  fronttier:
  middletier:
    name: middletier
  backtier:

volumes:
  elasticsearch: {}

services:

  # backtier, middletier (nginx)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.2.4
    restart: unless-stopped
    networks:
      - backtier
      - middletier
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    # ports:
    #   - "9200:9200"

  # fronttier (ports), backtier
  logstash:
    image: docker.elastic.co/logstash/logstash-oss:6.2.4
    restart: unless-stopped
    networks:
      - fronttier
      - backtier
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash-hello.conf:/usr/share/logstash/pipeline/logstash-hello.conf
      - ./logstash-syslog.conf:/usr/share/logstash/pipeline/logstash-syslog.conf
    ports:
      - "5000:5000"
      - "5000:5000/udp"
  
  # middletier (nginx)
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.2.4
    restart: unless-stopped
    networks:
      - middletier
    depends_on:
      - elasticsearch
    # ports:
    #   - "5601:5601"

  # middletier (nginx)
  bauth:
    build:
      context: ../BAuth/
    image: bauth
    restart: unless-stopped
    networks:
      - middletier
    # ports:
    #   - "80:80"

  # fronttier (ports), middletier
  nginx:
    image: nginx
    restart: unless-stopped
    networks:
      - fronttier
      - middletier
    depends_on:
      - bauth
      - elasticsearch
      - kibana
    #command: [nginx-debug, '-g', 'daemon off;']
    volumes:
      - "./nginx.conf:/etc/nginx/conf.d/default.conf"
    ports:
      - "80:80"   # kibana /w bauth
      - "81:81"   # kibana
      - "90:90"   # elasticsearch